{% if 'allow_websockets' in item and item.allow_websockets %}
map $http_upgrade $connection_upgrade {                                          
    default upgrade;                                                         
    '' close;                                                                
}       
{% endif %}

server {
    listen 80;
    server_name {{ item.domain_name }}{% if 'aliases' in item -%}
        {% for dn in item.aliases %} {{ dn }}{% endfor %}{% endif %};

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name {{ item.domain_name }}{% if 'aliases' in item -%}
        {% for dn in item.aliases %} {{ dn }}{% endfor %}{% endif %};

    ssl_certificate         {{ item.cert_path|default('/etc/letsencrypt/live/' + item.domain_name + '/fullchain.pem') }};
    ssl_certificate_key     {{ item.key_path|default('/etc/letsencrypt/live/' + item.domain_name + '/privkey.pem') }};
    ssl_trusted_certificate {{ item.cert_path|default('/etc/letsencrypt/live/' + item.domain_name + '/fullchain.pem') }};

    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;
    ssl_stapling on;
    ssl_stapling_verify on;

    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256";
    ssl_dhparam /etc/nginx/dhparams.pem;
    ssl_prefer_server_ciphers on;

    {% if 'auth_config' in item -%}
    auth_basic "{{ item.auth_config.description }}";
    auth_basic_user_file /etc/nginx/{{ item.domain_name }}.passwdfile;
    {% endif %}

    location /.well-known/acme-challenge {
        autoindex on;
        auth_basic off;
        root /data/www/certbot;
        try_files $uri $uri/ =404;
    }

    {% if 'locations' in item -%}
    {% for loc in item.locations -%}
    location {{ loc.url }} {
        {% if 'internal' in loc and loc.internal %}internal;
        {% endif %}
        {% if 'autoindex' in loc and loc.autoindex %}autoindex on;
        {% endif %}
        alias {{ loc.path }};
    }
    {% endfor %}
    {% endif %}

    {% if 'internal_address' in item -%}
    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        {% if 'allow_websockets' in item and item.allow_websockets -%}
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        {% endif -%}

        proxy_redirect off;

        proxy_pass {{ item.internal_address }};
    }
    {% endif %}

}
